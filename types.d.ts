/**
 * Automatically generated types for motia
 * Do NOT edit this file manually.
 * 
 * Consider adding this file to .prettierignore and eslint ignore.
 */
import { EventHandler, ApiRouteHandler, ApiResponse, MotiaStream } from 'motia'

declare module 'motia' {
  interface FlowContextStateStreams {
    
  }

  type Handlers = {
    'PaymentWebhookHandler': ApiRouteHandler<{ id: string; object: string; api_version: string; created: number; type: string; data: { object?: unknown; previous_attributes?: unknown }; livemode: boolean; pending_webhooks: number; request: unknown }, unknown, { topic: 'payment.received'; data: { eventId: string; eventType: string; paymentData?: unknown; timestamp: string } }>
    'CheckStateChange': EventHandler<{ key: string; expected: string }, never>
    'SetStateChange': EventHandler<{ message: string }, { topic: 'check-state-change'; data: { key: string; expected: string } }>
    'ApiTrigger': ApiRouteHandler<{ message: string }, ApiResponse<200, { message: string; traceId: string }>, { topic: 'test-state'; data: { message: string } }>
    'OrderValidation': EventHandler<{ eventId: string; eventType: string; paymentData?: unknown; timestamp: string }, { topic: 'order.validated'; data: { orderId: string; validated?: boolean; allAvailable?: boolean; inventoryResults?: unknown[]; customerId?: string; amount?: number; currency?: string } }>
    'InventoryCheck': EventHandler<{ eventId: string; eventType: string; paymentData?: unknown; timestamp: string }, { topic: 'inventory.checked'; data: { orderId: string; validated?: boolean; allAvailable?: boolean; inventoryResults?: unknown[]; customerId?: string; amount?: number; currency?: string } }>
    'OrderCoordinator': EventHandler<{ orderId: string; validated?: boolean; allAvailable?: boolean; inventoryResults?: unknown[]; customerId?: string; amount?: number; currency?: string }, { topic: 'order.ready'; data: { orderId: string; customerId?: string; amount?: number; currency?: string; validated?: boolean; allAvailable?: boolean; inventoryResults?: unknown[]; readyForCreation?: boolean } }>
    'OrderCreation': EventHandler<{ orderId: string; customerId?: string; amount?: number; currency?: string; validated?: boolean; allAvailable?: boolean; inventoryResults?: unknown[]; readyForCreation?: boolean }, never>
    'FulfillmentPlanning': EventHandler<never, { topic: 'fulfillment.planned'; data: { orderId: string; fulfillmentPlan: unknown[]; shippingOptions?: unknown; estimatedShipDate: string; trackingNumber: string } }>
    'CustomerNotification': EventHandler<{ orderId: string; fulfillmentPlan: unknown[]; shippingOptions?: unknown; estimatedShipDate: string; trackingNumber: string }, never>
    'OrderStatusAPI': ApiRouteHandler<Record<string, unknown>, unknown, never>
  }
}